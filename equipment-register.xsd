<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema version="0.1"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
            xmlns:gtc="https://measurement.govt.nz/gtc/xml"
            xmlns:msl="https://measurement.govt.nz/equipment-register"
            elementFormDefault="qualified"
            vc:minVersion="1.0"
            targetNamespace="https://measurement.govt.nz/equipment-register">

    <xsd:import namespace="https://measurement.govt.nz/gtc/xml" schemaLocation="./external/gtc.xsd"/>

    <xsd:annotation>
        <xsd:documentation>
            Copyright (c) 2024, Measurement Standards Laboratory of New Zealand.

            XML Schema Definition for the vocabulary and structure of an Equipment Register.

            An Equipment Register contains information to satisfy ISO/IEC 17025:2017 Clause 6.4.13:

            ```
            Records shall be retained for equipment which can influence laboratory activities.
            The records shall include the following where applicable:

            a) the identity of equipment, including software and firmware versions;
            b) the manufacturer's name, type identification, and serial number or other unique identification;
            c) evidence of verification that equipment conforms with specified requirements;
            d) the current location;
            e) calibration dates, results of calibrations, adjustments, acceptance criteria, and the due date of the next calibration or the calibration interval;
            f) documentation of reference materials, results, acceptance criteria, relevant dates and the period of validity;
            g) the maintenance plan and maintenance carried out to date, where relevant to the performance of the equipment;
            h) details of any damage, malfunction, modification to, or repair of, the equipment.
            ```

            as well as Section 4.3.6 of the MSL Quality Manual.
        </xsd:documentation>
    </xsd:annotation>

    <!-- Root element -->
    <xsd:element name="register">
        <xsd:annotation>
            <xsd:documentation>
                Root element that contains zero or more [equipment](#type_equipment) elements.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="equipment" type="msl:equipment"/>
            </xsd:sequence>
            <xsd:attribute name="team" type="msl:teamEnumerationString" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The team that is responsible for the equipment register.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
        <xsd:unique name="uniqueID">
            <xsd:selector xpath="msl:equipment/msl:id"/>
            <xsd:field xpath="."/>
        </xsd:unique>
    </xsd:element>

    <xsd:simpleType name="teamEnumerationString">
        <xsd:annotation>
            <xsd:documentation>
                The team that is responsible for the equipment register.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Electrical"/>
            <xsd:enumeration value="Humidity"/>
            <xsd:enumeration value="Length"/>
            <xsd:enumeration value="Light"/>
            <xsd:enumeration value="Mass"/>
            <xsd:enumeration value="Pressure"/>
            <xsd:enumeration value="Temperature"/>
            <xsd:enumeration value="Time"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="labEnumerationString">
        <xsd:annotation>
            <xsd:documentation>
                The laboratory that the equipment is usually located in.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CMM Lab"/>
            <xsd:enumeration value="Cryogenic Radiometer"/>
            <xsd:enumeration value="Detector Responsivity"/>
            <xsd:enumeration value="Flexible Optics"/>
            <xsd:enumeration value="Goniospectrophotometer"/>
            <xsd:enumeration value="Hilger Lab"/>
            <xsd:enumeration value="Kibble Balance"/>
            <xsd:enumeration value="Laser Lab"/>
            <xsd:enumeration value="Long Room"/>
            <xsd:enumeration value="Mass Standards Laboratories"/>
            <xsd:enumeration value="Photometric Bench"/>
            <xsd:enumeration value="Pressure Standards Laboratories"/>
            <xsd:enumeration value="Single Photon"/>
            <xsd:enumeration value="Spectrophotometer"/>
            <xsd:enumeration value="Underground Tape Tunnel"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="digitalFormatEnumerationString">
        <xsd:annotation>
            <xsd:documentation>
                The format of a digital calibration report.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MSL PDF/A-3"/>
            <xsd:enumeration value="PTB DCC"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="keywordsList">
        <xsd:annotation>
            <xsd:documentation>
                Keywords that may be used to describe the equipment.

                Each keyword is separated by whitespace.

                **Example**
                ```
                keywords="Source Voltage AC DC"
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:list>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="AC"/>
                    <xsd:enumeration value="Balance"/>
                    <xsd:enumeration value="Barometer"/>
                    <xsd:enumeration value="Current"/>
                    <xsd:enumeration value="DAQ"/>
                    <xsd:enumeration value="DC"/>
                    <xsd:enumeration value="DMM"/>
                    <xsd:enumeration value="GaugeBlock"/>
                    <xsd:enumeration value="Hygrometer"/>
                    <xsd:enumeration value="Laser"/>
                    <xsd:enumeration value="Monochromator"/>
                    <xsd:enumeration value="Oscilloscope"/>
                    <xsd:enumeration value="PRT"/>
                    <xsd:enumeration value="ResistanceBridge"/>
                    <xsd:enumeration value="Sense"/>
                    <xsd:enumeration value="Source"/>
                    <xsd:enumeration value="Thermometer"/>
                    <xsd:enumeration value="Voltage"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:list>
    </xsd:simpleType>

    <xsd:simpleType name="statusEnumerationString">
        <xsd:annotation>
            <xsd:documentation>
                The status of the equipment is an indication of whether the
                equipment is _active_ (in use) or _inactive_ (not in use).

                A single value indicates that the equipment is _active_:

                * **Active**: The equipment is operable and may be used

                The following values indicate that the equipment is _inactive_, but
                provide more context as to the reason why it is _inactive_:

                * **Damaged**: The equipment is damaged and is no longer usable
                * **Dormant**: The equipment is still operable, it is no longer in use but may be used again
                  (e.g., the equipment was replaced with a newer/different model, and it is kept as a backup)
                * **Lost**: The equipment is lost, but if found may be put back into service.
                * **Retired**: The equipment is still operable, but there are no intentions of using it again
                  (e.g., the equipment depends on other equipment that is not available or is no longer manufactured)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Active"/>
            <xsd:enumeration value="Damaged"/>
            <xsd:enumeration value="Dormant"/>
            <xsd:enumeration value="Lost"/>
            <xsd:enumeration value="Retired"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="quantityEnumerationString">
        <xsd:annotation>
            <xsd:documentation>
                The quantity intended to be measured.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Angle"/>
            <xsd:enumeration value="Angularity"/>
            <xsd:enumeration value="BRDF"/>
            <xsd:enumeration value="BTDF"/>
            <xsd:enumeration value="Colour"/>
            <xsd:enumeration value="Current"/>
            <xsd:enumeration value="Cylindricity"/>
            <xsd:enumeration value="Deviation in Length"/>
            <xsd:enumeration value="Flatness"/>
            <xsd:enumeration value="Frequency"/>
            <xsd:enumeration value="Haze"/>
            <xsd:enumeration value="Humidity"/>
            <xsd:enumeration value="Length"/>
            <xsd:enumeration value="Mass"/>
            <xsd:enumeration value="Parallelism"/>
            <xsd:enumeration value="Perpendicularity"/>
            <xsd:enumeration value="Pressure"/>
            <xsd:enumeration value="Reflectance"/>
            <xsd:enumeration value="Resistance"/>
            <xsd:enumeration value="Roundness"/>
            <xsd:enumeration value="Runout"/>
            <xsd:enumeration value="Sphericity"/>
            <xsd:enumeration value="Straightness"/>
            <xsd:enumeration value="Temperature"/>
            <xsd:enumeration value="Total Runout"/>
            <xsd:enumeration value="Transmittance"/>
            <xsd:enumeration value="Variation in Length"/>
            <xsd:enumeration value="Voltage"/>
            <xsd:enumeration value="Wavelength"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="idPatternString">
        <xsd:annotation>
            <xsd:documentation>
                Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                a) the identity of equipment ...

                The id pattern shall consist of
                * the upper-case letters **MSLE**
                * followed by one period **.** (0x2E)
                * followed by one of the following letters
                    * **E**: Electrical
                    * **F**: Frequency (Time)
                    * **H**: Humidity
                    * **L**: Length
                    * **M**: Mass
                    * **O**: Optics (Light)
                    * **P**: Pressure
                    * **T**: Temperature
                * followed by one period **.** (0x2E)
                * followed by one or more upper-case letters and/or digits
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="MSLE\.[EFHLMOPT]\.[A-Z0-9]+"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="nonEmptyString">
        <xsd:annotation>
            <xsd:documentation>
                A non-empty string that shall not contain the line feed (0x0A)
                nor carriage return (0x0D) characters.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value=".*\S.*"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="tokenizedString">
        <xsd:annotation>
            <xsd:documentation>
                A non-empty string that shall not
                * contain the tab (0x09), line feed (0x0A) nor carriage return (0x0D) characters,
                * contain sequences of two or more spaces (0x20),
                * have leading or trailing spaces.

                This implementation is what [xsd:token](https://www.w3.org/TR/xmlschema-2/#token)
                indicates; however, to achieve the desired validation outcome, string normalisation
                must not occur before validation. This is the reason why the _base_ class is
                [xsd:string](https://www.w3.org/TR/xmlschema-2/#string) (with a _pattern_ facet)
                and not [xsd:token](https://www.w3.org/TR/xmlschema-2/#token). The
                [lexical space](https://www.w3.org/TR/xmlschema-2/#lexical-space)
                is not what is in the raw XML document, it is what you get after applying
                _pre-lexical_ normalisations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="\S(\S*( ?)\S+)*"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="variables">
        <xsd:annotation>
            <xsd:documentation>
                A list of variable name(s) in an equation.

                Each variable name must begin with a letter and may be
                followed by zero or more letter, digit or underscore
                characters.

                Whitespace shall be used to separate each variable name.

                If no variables are used in the equation (i.e., the
                equation is a constant numerical value), the `variables`
                attribute must still exist, but the value may be empty.

                **Examples**
                * variables=""
                * variables="x"
                * variables="t rh"
                * variables="x1 x2 x3"
            </xsd:documentation>
        </xsd:annotation>
        <xsd:list>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:pattern value="[a-zA-Z][a-zA-Z0-9_]*"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:list>
    </xsd:simpleType>

    <xsd:simpleType name="nonNegativeDecimal">
        <xsd:annotation>
            <xsd:documentation>
                A decimal number that is &#x2265; 0.

                Derived from [xsd:decimal](https://www.w3.org/TR/xmlschema-2/#decimal)
                by setting the value of _minInclusive_ to be 0.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:decimal">
            <xsd:minInclusive value="0"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="equipment">
        <xsd:annotation>
            <xsd:documentation>
                Contains information about the equipment to satisfy ISO/IEC 17025:2017
                Clause 6.4.13 as well as the MSL Quality Manual Section 4.3.6.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="id" type="msl:idPatternString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        a) the identity of equipment ...

                        The content must uniquely identify the equipment and must match
                        the expected pattern.

                        _Attention: This XSD document validates the content of an XML document
                        (e.g., that the `id` element exists, the content matches the expected
                        pattern and that the `id` is unique within a **single** equipment-register
                        file). It does not validate that the `id` is universally (within MSL)
                        unique, for example, if an equipment-register for a team is distributed
                        across multiple XML files. To validate the universal uniqueness of the
                        `id` content, you must use another tool._
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="manufacturer" type="msl:tokenizedString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        b) the manufacturer's name ...
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="model" type="msl:tokenizedString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        b) the manufacturer's ... type identification ...
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="serial" type="msl:tokenizedString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        b) the manufacturer's ... serial number or other unique identification
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="description" type="msl:tokenizedString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy a _shall_ item in Section 4.3.6 of the MSL Quality Manual. \
                        A short description about the equipment.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="location" type="msl:labEnumerationString">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        d) the current location

                        While the Clause states the _current_ location, this is interpreted
                        as the _usual_ location (laboratory) that the equipment is found in.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="status" type="msl:statusEnumerationString">
                <xsd:annotation>
                    <xsd:documentation>
                        The status of the equipment is an indication of whether the
                        equipment is _active_ (in use) or _inactive_ (not in use).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="loggable" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether measurements from the equipment should be logged.

                        Equipment that monitor (for example) pressure, temperature
                        or humidity of a laboratory environment are considered as loggable.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="traceable" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>
                        Whether the equipment is used for a traceable measurement.

                        If the equipment is part of a traceability chain, the equipment
                        must have [calibrations](#type_calibrations) specified.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="calibrations" type="msl:calibrations">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        e) calibration dates, results of calibrations, adjustments, acceptance criteria, and the due date of the next calibration or the calibration interval
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:unique name="uniqueMeasurandQuantity">
                    <xsd:selector xpath="msl:measurand"/>
                    <xsd:field xpath="@quantity"/>
                </xsd:unique>
            </xsd:element>
            <xsd:element name="maintenance" type="msl:maintenance">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        g) the maintenance plan and maintenance carried out to date, where relevant to the performance of the equipment
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="alterations" type="msl:alterations">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        h) details of any damage, malfunction, modification to, or repair of, the equipment
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="firmware" type="msl:firmware">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        a) ... software and firmware version
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="acceptanceCriteria" type="msl:any">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        f) documentation of ..., acceptance criteria, ...

                        The criteria under which the equipment may be used for a calibration job.

                        Some examples of user-defined elements that may be specified are
                        * the temperature of the equipment must be within a certain range
                        * the temperature and/or humidity of the lab must be within a certain range
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="financial" type="msl:financial">
                <xsd:annotation>
                    <xsd:documentation>
                        Includes the _optional_ financial information about the equipment
                        to satisfy Section 4.3.6 of the MSL Quality Manual.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="documentation" type="msl:documentation">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        f) documentation of reference materials, results, ..., relevant dates and the period of validity

                        Also includes the _optional_ information that is specified in the
                        MSL Quality Manual Section 4.3.6.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="extra" type="msl:any" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Extra metadata to add to the equipment register that does not
                        belong to one of the pre-defined elements in the schema.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="alias" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    _Optional:_ An alternative name to associate with the equipment.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="keywords" type="msl:keywordsList">
            <xsd:annotation>
                <xsd:documentation>
                    _Optional:_ Keywords that describe the equipment.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="comment">
        <xsd:annotation>
            <xsd:documentation>
                A non-empty string that shall not contain the line feed (0x0A)
                nor carriage return (0x0D) characters and shall have a date
                as an attribute. The date must be in the YYYY-MM-DD format (see
                [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="msl:nonEmptyString">
                <xsd:attribute name="date" type="xsd:date" use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="maintenance">
        <xsd:annotation>
            <xsd:documentation>
                Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                g) the maintenance plan and maintenance carried out to date, where relevant to the performance of the equipment

                **Examples**

                No maintenance plan is required
                ```
                &lt;maintenance/&gt;
                ```
                Some maintenance tasks are planned but none have been completed
                ```
                &lt;maintenance&gt;
                  &lt;planned&gt;
                    &lt;task dateDue="2024-12-01"&gt;Refill helium gas&lt;/task&gt;
                    &lt;task dateDue="2025-05-15" performedBy="Company X"&gt;Service laser&lt;/task&gt;
                  &lt;/planned&gt;
                  &lt;completed/&gt;
                &lt;/maintenance&gt;
                ```
                Some maintenance tasks are planned and some have been completed
                ```
                &lt;maintenance&gt;
                  &lt;planned&gt;
                    &lt;task dateDue="2025-05-15" performedBy="Company X"&gt;Service laser&lt;/task&gt;
                  &lt;/planned&gt;
                  &lt;completed&gt;
                    &lt;task dateDue="2024-12-01" dateCompleted="2024-12-02" performedBy="Tom, MSL"&gt;Refill helium gas&lt;/task&gt;
                  &lt;/completed&gt;
                &lt;/maintenance&gt;
                ```
                No maintenance tasks are planned and some have been completed
                ```
                &lt;maintenance&gt;
                  &lt;planned/&gt;
                  &lt;completed&gt;
                    &lt;task dateDue="2025-05-15" dateCompleted="2025-05-15" performedBy="Company X"&gt;Service laser&lt;/task&gt;
                    &lt;task dateDue="2024-12-01" dateCompleted="2024-12-02" performedBy="Tom, MSL"&gt;Refill helium gas&lt;/task&gt;
                  &lt;/completed&gt;
                &lt;/maintenance&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0">
            <xsd:element name="planned">
                <xsd:annotation>
                    <xsd:documentation>
                        A sequence of planned maintenance tasks to be performed.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                        <xsd:element name="task" type="msl:plannedTask"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="completed">
                <xsd:annotation>
                    <xsd:documentation>
                        A sequence of completed maintenance tasks that have been performed.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                        <xsd:element name="task" type="msl:completedTask"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="plannedTask">
        <xsd:annotation>
            <xsd:documentation>
                A planned maintenance task to be performed.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="msl:nonEmptyString">
                <xsd:attribute name="dateDue" type="xsd:date" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date that the planned maintenance task is due to be completed.
                            The date must be in the YYYY-MM-DD format (see
                            [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="performedBy" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            _Optional:_ The person or company that will perform the planned maintenance task.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="completedTask">
        <xsd:annotation>
            <xsd:documentation>
                A planned maintenance task that was completed.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="msl:nonEmptyString">
                <xsd:attribute name="dateDue" type="xsd:date" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date that the planned maintenance task was due to be completed.
                            The date must be in the YYYY-MM-DD format (see
                            [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="dateCompleted" type="xsd:date" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date that the planned maintenance task was completed.
                            The date must be in the YYYY-MM-DD format (see
                            [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="performedBy" type="msl:nonEmptyString" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The person or company that performed the planned maintenance task.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="alterations">
        <xsd:annotation>
            <xsd:documentation>
                Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                h) details of any damage, malfunction, modification to, or repair of, the equipment

                **Examples**

                No alterations have been performed
                ```
                &lt;alterations/&gt;
                ```
                Some alterations have been performed
                ```
                &lt;alterations&gt;
                  &lt;alteration date="2024-10-16" performedBy="Chris, MSL"&gt;Replace blown op-amp with Texas Instruments LMP7721&lt;/alteration&gt;
                  &lt;alteration date="2022-06-23" performedBy="Chris, MSL"&gt;Attach heatsink to voltage regulator&lt;/alteration&gt;
                &lt;/alterations&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="alteration" type="msl:alteration"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="alteration">
        <xsd:annotation>
            <xsd:documentation>
                The details of the alteration. Such as any damage, malfunction,
                modification to, or repair of, the equipment.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="msl:nonEmptyString">
                <xsd:attribute name="date" type="xsd:date" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The date that the alteration was performed.
                            The date must be in the YYYY-MM-DD format (see
                            [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="performedBy" type="msl:nonEmptyString" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The person or company that performed the alteration.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="firmware">
        <xsd:annotation>
            <xsd:documentation>
                Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                a) ... software and firmware version

                A distinction is made between _software_ and _firmware_ version.

                **Software**: May be provided by the manufacturer of the equipment
                and may be installed/updated by an end user on _any_ computer. The
                manufacturer of the equipment may provide this software as, for
                example, a graphical user interface (GUI) and/or as a software
                development kit (SDK) to interface with the equipment. Software
                could also refer to the version of the bespoke code that is written
                by a metrologist to control the equipment. Both the manufacturer and
                the bespoke software version are important to document, but it shall
                not be specified in the equipment register. It shall be documented in a
                different manner, e.g., as metadata in a file during data acquisition.

                **Firmware**: Embedded within the equipment. May be updated by either
                the manufacturer and/or the end user. If applicable, it shall be
                specified in the equipment register.

                The primary difference is that the _firmware_ version has a single
                value of truth (it is independent of where the equipment
                is physically located and independent of which computer is used to
                interface with it) whereas the _software_ version depends on which
                computer (perhaps even on which executable is run on the same computer)
                is used to interface with the equipment and therefore there may not be
                a single value of truth that can be defined in the equipment register.

                For equipment that support the `*IDN?` query, the firmware version is
                typically found as the fourth item in the reply: _manufacturer,model,serial,firmware_

                **Example**

                ```
                &lt;firmware&gt;
                  &lt;version date="2025-01-14"&gt;1.4.0&lt;/version&gt;
                  &lt;version date="2023-06-14"&gt;1.3.2&lt;/version&gt;
                &lt;/firmware&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="version" type="msl:comment"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="financial">
        <xsd:annotation>
            <xsd:documentation>
                Includes the _optional_ financial information about the equipment
                to satisfy Section 4.3.6 of the MSL Quality Manual.

                The child elements, if specified, may appear in any order and
                are each optional.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="assetNumber" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        _Optional_: The asset number in the financial system.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="warrantyExpirationDate" type="xsd:date" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        _Optional_: Approximate date that the warranty expires.
                        The date must be in the YYYY-MM-DD format (see
                        [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="yearPurchased" type="xsd:gYear" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        _Optional_: Approximate year that the equipment was purchased.
                        The year must be in the YYYY format (see
                        [xsd:gYear](https://www.w3.org/TR/xmlschema-2/#gYear) for details).
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="documentation">
        <xsd:annotation>
            <xsd:documentation>
                Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                f) documentation of reference materials, results, ..., relevant dates
                   and the period of validity

                Also includes the _optional_ information that is specified in Section 4.3.6
                of the MSL Quality Manual.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:all minOccurs="0">
            <xsd:element name="accessories" type="xsd:string" minOccurs="0"/>
            <xsd:element name="manual" type="xsd:anyURI" minOccurs="0"/>
            <xsd:element name="personnelRestrictions" type="xsd:string" minOccurs="0"/>
            <xsd:element name="referenceMaterials" type="xsd:string" minOccurs="0"/>
            <xsd:element name="technicalProcedures" type="xsd:string" minOccurs="0"/>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="any">
        <xsd:annotation>
            <xsd:documentation>
                Anything. May contain zero or more child elements and each child element
                may contain zero or more attributes and zero or more grandchildren, etc.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:any processContents="lax"/>
        </xsd:sequence>
        <xsd:anyAttribute processContents="lax"/>
    </xsd:complexType>

    <xsd:complexType name="calibrations">
        <xsd:annotation>
            <xsd:documentation>
                Contains zero or more [measurand](#type_measurand) elements.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="measurand" type="msl:measurand">
                <xsd:annotation>
                    <xsd:documentation>
                        The quantity intended to be measured.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:unique name="uniqueComponentName">
                    <xsd:selector xpath="msl:component"/>
                    <xsd:field xpath="@name"/>
                </xsd:unique>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="measurand">
        <xsd:annotation>
            <xsd:documentation>
                The quantity intended to be measured.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="component" type="msl:component">
                <xsd:annotation>
                    <xsd:documentation>
                        A component of the equipment that measures the `quantity` attribute.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="quantity" type="msl:quantityEnumerationString" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The kind of quantity that is measured.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="calibrationInterval" type="msl:nonNegativeDecimal" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The number of years that may pass between calibrations.
                    For equipment that do not have a required calibration
                    interval but are calibrated _on demand_, use the value 0.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="component">
        <xsd:annotation>
            <xsd:documentation>
                A component of the equipment that measures the [quantity](#type_quantity).

                Contains a sequence of reports (either digital and/or non-digital reports)
                and adjustments for the measured [quantity](#type_quantity).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:choice>
                <xsd:element name="adjustment" type="msl:comment">
                    <xsd:annotation>
                        <xsd:documentation>
                            Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                            e) calibration ... adjustments ...

                            An example of an _adjustment_ is cleaning the equipment
                            (e.g., a spectral filter) and then performing another calibration
                            measurement.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="digitalReport" type="msl:digitalReport">
                    <xsd:annotation>
                        <xsd:documentation>
                            A digital calibration report for this `component`.

                            A digital calibration report contains embedded
                            metadata and data that is required by ISO/IEC 17025:2017
                            Clause 7.8.2.1 (and perhaps additional information).
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="report" type="msl:report">
                    <xsd:annotation>
                        <xsd:documentation>
                            A (non-digital) calibration report for this `component`.

                            Since the report is not digital (does not contain embedded
                            metadata and data) _some_ of the information that is required
                            by ISO/IEC 17025:2017 Clause 7.8.2.1 must be explicitly
                            included in the equipment register.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name to associate with this `component`. The value must
                    be unique amongst the other `component` elements within
                    the _same_ `measurand` element. An empty string is permitted.

                    **Examples**

                    A digital multimeter
                    ```
                    &lt;component name="Front"&gt;
                    &lt;component name="Rear terminal"&gt;
                    ```
                    A data acquisition (DAQ) system
                    ```
                    &lt;component name="AO1"&gt;
                    &lt;component name="Analog In 1"&gt;
                    &lt;component name="PFI2"&gt;
                    &lt;component name="Counter 1"&gt;
                    ```
                    A scanner or multiplexer
                    ```
                    &lt;component name="Ch1"&gt;
                    &lt;component name="Channel 2"&gt;
                    ```
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="digitalReport">
        <xsd:annotation>
            <xsd:documentation>
                A digital calibration report.

                A digital calibration report contains embedded
                metadata and data that is required by ISO/IEC 17025:2017
                Clause 7.8.2.1 (and perhaps additional information).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="msl:file">
                <xsd:attribute name="format" type="msl:digitalFormatEnumerationString" use="required"/>
                <xsd:attribute name="id" type="msl:nonEmptyString" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            The report identification (also referred to as the *report number* in MSL terminology).

                            Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                            d) unique identification that all its components are recognized
                               as a portion of a complete report and a clear identification of the end
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="report">
        <xsd:annotation>
            <xsd:documentation>
                A (non-digital) calibration report.

                Since the report is not digital (does not contain embedded
                metadata and data) _some_ of the information that is required
                by ISO/IEC 17025:2017 Clause 7.8.2.1 must be explicitly
                included in the equipment register.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reportIssueDate" type="xsd:date">
                <xsd:annotation>
                    <xsd:documentation>
                        The date that the report was issued.
                        The date must be in the YYYY-MM-DD format (see
                        [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        j) the date of issue of the report
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="measurementStartDate" type="xsd:date">
                <xsd:annotation>
                    <xsd:documentation>
                        The date that the calibration measurement started.
                        The date must be in the YYYY-MM-DD format (see
                        [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        i) the date(s) of performance of the laboratory activity
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="measurementStopDate" type="xsd:date">
                <xsd:annotation>
                    <xsd:documentation>
                        The date that the calibration measurement stopped.
                        The date must be in the YYYY-MM-DD format (see
                        [xsd:date](https://www.w3.org/TR/xmlschema-2/#date) for details).

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        i) the date(s) of performance of the laboratory activity
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="issuingLaboratory">
                <xsd:annotation>
                    <xsd:documentation>
                        The laboratory that issued the report.

                        If the issuing laboratory is a National Metrology Institute,
                        it is recommended to specify the laboratory acronym, such as,
                        _MSL_ instead of _Measurement Standards Laboratory_.

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        b) the name ... of the laboratory
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:simpleContent>
                        <xsd:extension base="msl:nonEmptyString">
                            <xsd:attribute name="person" type="msl:nonEmptyString">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        _Optional:_ A person at the issuing laboratory that
                                        authorised the report. The attribute does not need to be
                                        specified, but, if it is specified, the value cannot be emtpy.

                                        This may be useful as a means of identifying a contact person
                                        at another laboratory if the report is not from MSL.

                                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                                        o) identification of the person(s) authorizing the report
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                        </xsd:extension>
                    </xsd:simpleContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="technicalProcedure" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The technical procedure(s) that was(were) followed to perform the calibration.

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        f) identification of the method used \
                        n) additions to, deviations, or exclusions from the method
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="conditions" type="msl:any">
                <xsd:annotation>
                    <xsd:documentation>
                        The conditions under which the calibration report is valid.

                        Some examples of user-defined elements that may be specified are
                        * the temperature of the equipment must be within a certain range
                        * the temperature and/or humidity of the lab must be within a certain range
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="acceptanceCriteria" type="msl:any">
                <xsd:annotation>
                    <xsd:documentation>
                        Satisfy ISO/IEC 17025:2017 Clause 6.4.13 \
                        e) calibration ... acceptance criteria ...
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:choice maxOccurs="unbounded">
                <xsd:element name="equation" type="msl:equation">
                    <xsd:annotation>
                        <xsd:documentation>
                            Calibration data is expressed as an equation.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="file" type="msl:file">
                    <xsd:annotation>
                        <xsd:documentation>
                            Calibration data is stored in another file.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="serialised" type="msl:serialised">
                    <xsd:annotation>
                        <xsd:documentation>
                            Calibration data is stored in a serialised format.

                            Serialisation (also known as marshalling) is the process of
                            translating a data structure or object state into a format
                            that can be stored and reconstructed later.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="table" type="msl:table">
                    <xsd:annotation>
                        <xsd:documentation>
                            Calibration data is expressed as a CSV table.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="id" type="msl:nonEmptyString" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The report identification (also referred to as the *report number* in MSL terminology).

                    Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                    d) unique identification that all its components are recognized
                       as a portion of a complete report and a clear identification of the end
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="equation">
        <xsd:annotation>
            <xsd:documentation>
                The calibration is expressed as an equation. Both the `value` and the
                `uncertainty` may be expressed as an equation.

                The content of the equation to parse may contain
                * the space (0x20) and tab (0x09) characters
                * integer and floating-point numbers (e.g., 100, 100.0, 1e2, 1.0E+02)
                * the following brackets: `(` `)`
                * the following (unary) operators: `+` `-` `*` `/`
                * the following names to represent the corresponding numerical value:
                  - pi = 3.14159...
                * the following functions:
                  - pow
                  - sqrt
                  - sin
                  - asin
                  - cos
                  - acos
                  - tan
                  - atan
                  - exp
                  - log (natural logarithm, base _e_)
                  - log10 (common logarithm, base _10_)

                Depending on the programming language that is used to parse an equation,
                a search and replace may need to be performed. If the programming language
                does not support the `pow(x,y)` function to raise `x` to the power of `y`,
                you may use the following regular expression (which uses a named capture
                group for the `x` and `y` text) `pow\((?&lt;x&gt;[^,]+),(?&lt;y&gt;[^,]+)\)`
                to perform a search and replace.

                _Attention: This XSD document validates the content of an XML document
                (e.g., that the `value` and `uncertainty` elements exist and the content
                is a [nonEmptyString](#type_nonEmptyString)). It does not attempt to validate
                that the equation is mathematically correct (e.g., whether the equation
                is missing a closing bracket). You must use another tool to validate the
                mathematical correctness of the equation._

                **Example**

                The correction to apply for the `value` is expressed as a second-order
                polynomial and the `uncertainty` is a constant.
                ```
                &lt;equation&gt;
                  &lt;value variables="T"&gt;T + (-10.66 + 1.58e-2*T + 1.212e-3*pow(T,2))&lt;/value&gt;
                  &lt;uncertainty variables=""&gt;0.45&lt;/uncertainty&gt;
                  &lt;unit&gt;°C&lt;/unit&gt;
                  &lt;ranges&gt;
                    &lt;range variable="T"&gt;
                      &lt;minimum&gt;15&lt;/minimum&gt;
                      &lt;maximum&gt;25&lt;/maximum&gt;
                    &lt;/range&gt;
                  &lt;/ranges&gt;
                &lt;/equation&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="value">
                <xsd:annotation>
                    <xsd:documentation>
                        The equation to parse to calculate the corrected `value`.

                        If the `value` is a constant numerical value (i.e., an offset),
                        set the `variables` attribute value to be empty (the `variables`
                        attribute must still be defined).

                        See the documentation of [equation](#type_equation) for
                        more details about the characters that may be used.

                        See the documentation of [variables](#type_variables) for
                        more details about the `variables` attribute.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:simpleContent>
                        <xsd:extension base="msl:nonEmptyString">
                            <xsd:attribute name="variables" type="msl:variables" use="required"/>
                        </xsd:extension>
                    </xsd:simpleContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="uncertainty">
                <xsd:annotation>
                    <xsd:documentation>
                        The equation to parse to calculate the standard uncertainty.

                        If the `uncertainty` is a constant numerical value, set the
                        `variables` attribute value to be empty (the `variables`
                        attribute must still be defined).

                        A calibration report may state the expanded uncertainty and
                        the coverage factor. The parsed `uncertainty` equation must
                        return the standard uncertainty. If you want to specify
                        the expanded uncertainty and the coverage factor in your XML
                        document, you may define the `uncertainty` equation as

                        `expanded_uncertainty / coverage_factor`

                        where, you must replace `expanded_uncertainty` and
                        `coverage_factor` with the actual numerical value.

                        See the documentation of [equation](#type_equation) for
                        more details about the characters that may be used.

                        See the documentation of [variables](#type_variables) for
                        more details about the `variables` attribute.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:simpleContent>
                        <xsd:extension base="msl:nonEmptyString">
                            <xsd:attribute name="variables" type="msl:variables" use="required"/>
                        </xsd:extension>
                    </xsd:simpleContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="unit" type="msl:nonEmptyString">
                <xsd:annotation>
                    <xsd:documentation>
                        The unit of the measured quantity.

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        m) the results with, where appropriate, the units of measurement
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="ranges" type="msl:ranges">
                <xsd:annotation>
                    <xsd:documentation>
                        The numeric range for each variable that an `equation` is valid for.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="degreeFreedom" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        The degrees of freedom. If not specified, the degrees of freedom
                        shall be considered to be `+INF`.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:double">
                        <xsd:minInclusive value="1"/>
                        <xsd:maxInclusive value="INF"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="file">
        <xsd:annotation>
            <xsd:documentation>
                Calibration data is stored in another file.

                Specifying an absolute path in an equipment register should only be
                performed if the location of the file will remain constant for an
                extended period of time. This is not typically the case, as MSL has
                had to migrate data multiple times (i.e., a network drive, then GDrive,
                then OneDrive, ...).

                One option is to think of the file-system path as a combination of two parts

                ```
                root \ &lt;url&gt;
                ```

                where,
                * root: This is not stored in an equipment register. Instead, it may be
                        stored in a separate file (ideally in a single file) on a local
                        hard drive. How and where this is stored is up to the individual.
                * url: This is the `&lt;url&gt;` element in an equipment register.

                For example, consider the following absolute path
                ```
                C:\Users\username\OneDrive - My Company Name\Length\Quality\Equipment\register.xml
                ```
                each part could be broken down as follows

                * root = `C:\Users\username\OneDrive - My Company Name\`
                  - this value could be stored, for example, in a file in the users home directory
                    or as a constant in the analysis software
                * url = `Length\Quality\Equipment\register.xml`

                Whenever someone needs to load the file, the `root` is read from a local
                file and the `&lt;url&gt;` element is read from the equipment register and
                the absolute path is constructed.

                _Attention: This XSD document validates the content of an XML document
                (e.g., that the `url` element exists and the content is a
                [nonEmptyString](#type_nonEmptyString)). It does not attempt to validate
                that the file exists nor if the SHA-256 checksum is correct for the file
                (although the general format of the checksum, i.e., has the proper length
                and contains only allowed characters, is validated). You must use another
                tool to validate the existence of the file and the validity of the
                checksum value._

                **Examples**

                The data is stored in an Excel file that is located at a _relative_ path
                ```
                &lt;file&gt;
                  &lt;url sheet="2024-May" cell="B2:D25"&gt;relative\path\data.xlsx&lt;/url&gt;
                  &lt;sha256&gt;70d79d2eb24dc2515faaf4ab7fa3540e5a73ca6080181908a0ea87a309293609&lt;/sha256&gt;
                &lt;/file&gt;
                ```

                The data is stored in a digital calibration certificate on a network server
                ```
                &lt;file&gt;
                  &lt;url&gt;file://msl-nas/Photometry/Calibrations/job123456.xml&lt;/filename&gt;
                  &lt;sha256&gt;8392e473a047543773138653b98037956fa2086e4a54fc882d913f10cc217728&lt;/sha256&gt;
                &lt;/file&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="url">
                <xsd:annotation>
                    <xsd:documentation>
                        The location of the file.
                        May contain zero or more attributes.

                        The syntax of the Uniform Resource Locator (URL) follows
                        [RFC 1738](https://www.rfc-editor.org/rfc/rfc1738)
                        ```
                        scheme:scheme-specific-part
                        ```
                        except, if the `scheme:` is not specified, it is assumed to be `file:`,
                        which corresponds to a file that is on the local file system of the computer
                        (which may be a mapped network drive).

                        Including the `scheme:` is required if a particular protocol must be used
                        to access the file, for example, `ftp:` or `https:`. Custom MSL-standardised
                        schemes (which do not exist yet) may also be implemented, such as,
                        `onedrive:` or `gdrive:`.

                        **Examples**

                        The data is stored in a digital calibration report on a network server
                        ```
                        &lt;url&gt;file://msl-nas/Photometry/Calibrations/job123456.pdf&lt;/url&gt;
                        ```

                        The data is stored in an Excel file that is located at a local _relative_ path
                        ```
                        &lt;url sheet="2024-May" cell="B2:D25"&gt;relative\path\data.xlsx&lt;/url&gt;
                        ```
                        where the _absolute_ path may be constructed using the _root_-directory
                        concept (discussed in the [file](#type_file)-element documentation),
                        for example, the _absolute_ path is constructed as
                        ```
                        root\relative\path\data.xlsx
                        ```

                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:simpleContent>
                        <xsd:extension base="msl:nonEmptyString">
                            <xsd:anyAttribute processContents="skip"/>
                        </xsd:extension>
                    </xsd:simpleContent>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="sha256">
                <xsd:annotation>
                    <xsd:documentation>
                        The SHA-256 checksum of the file.

                        On a Windows computer, the SHA-256 checksum can be calculated using a
                        terminal (e.g., PowerShell or Command Prompt) using

                        ```console
                        > CertUtil -hashfile "path_to_your_file" SHA256
                        ```

                        On UNIX-based computers, the SHA-256 checksum can be calculated using

                        ```console
                        $ shasum -a 256 "path_to_your_file"
                        ```
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[a-fA-F0-9]{64}"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="serialised">
        <xsd:annotation>
            <xsd:documentation>
                Calibration data is stored in a serialised format.

                Serialisation (also known as marshalling) is the process of
                translating a data structure or object state into a format
                that can be stored and reconstructed later.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:choice>
            <xsd:element ref="gtc:gtcArchive">
                <xsd:annotation>
                    <xsd:documentation>
                        Calibration data is stored as a
                        [GUM Tree Calculator (GTC)](https://gtc.readthedocs.io/en/stable/index.html)
                        [Archive](https://gtc.readthedocs.io/en/stable/API/persistence.html#persistence.Archive)
                        in XML format.

                        If you want to serialise an `Archive` into a _string_ that can be
                        copied-pasted into an equipment-register file, you may use the
                        [dumps_xml](https://gtc.readthedocs.io/en/stable/API/persistence.html#persistence.dumps_xml)
                        function with the following keyword arguments

                        ```
                        from GTC.persistence import dumps_xml

                        # create Archive object

                        print(dumps_xml(archive, encoding="unicode", xml_declaration=None))
                        ```

                        otherwise, you can create an
                        [Element](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element)
                        directly and add it to an
                        [ElementTree](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree)

                        ```
                        from GTC.xml_format import archive_to_xml

                        # create the Archive

                        element = archive_to_xml(archive)

                        # add the `element` to your XML element tree
                        ```

                        `GTC` has an XML Schema Definition file to validate the serialised format of an `Archive`.

                        **Example**
                        ```
                        &lt;serialised&gt;
                          &lt;gtcArchive version="1.5.0" xmlns="https://measurement.govt.nz/gtc/xml"&gt;
                            ...
                          &lt;/gtcArchive&gt;
                        &lt;/serialised&gt;
                        ```
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="gtcArchiveJSON">
                <xsd:annotation>
                    <xsd:documentation>
                        Calibration data is stored as a
                        [GUM Tree Calculator (GTC)](https://gtc.readthedocs.io/en/stable/index.html)
                        [Archive](https://gtc.readthedocs.io/en/stable/API/persistence.html#persistence.Archive)
                        in JSON format.

                        Use the
                        [dumps_json](https://gtc.readthedocs.io/en/stable/API/persistence.html#persistence.dumps_json)
                        function to serialise an `Archive` and the
                        [loads_json](https://gtc.readthedocs.io/en/stable/API/persistence.html#persistence.loads_json)
                        function to deserialise the `gtcArchiveJSON` content.

                        _Attention: This XSD document validates the content of an XML document
                        (e.g., that the `gtcArchiveJSON` element has content that may be any
                        string). It does not attempt to validate that the content is a valid
                        string that can be used to create an `Archive` object. You must use
                        `GTC` to validate the content._

                        **Example**
                        ```
                        &lt;serialised&gt;
                          &lt;gtcArchiveJSON&gt;{"CLASS": "Archive", ...}&lt;/gtcArchiveJSON&gt;
                        &lt;/serialised&gt;
                        ```
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:simpleContent>
                        <xsd:extension base="xsd:string">
                            <xsd:anyAttribute processContents="skip"/>
                        </xsd:extension>
                    </xsd:simpleContent>
                </xsd:complexType>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="table">
        <xsd:annotation>
            <xsd:documentation>
                Calibration data is expressed as a CSV table.

                _Attention: This XSD document validates the content of an XML document
                (e.g., that the `header` element exists and that the content matches
                the allowed pattern). It does not attempt to validate that the table
                is structurally correct (e.g., whether `type`, `unit`, `header` and
                `data` contain the same number of columns). You must use another tool
                to validate the structure of the table._

                **Example**
                ```
                &lt;table&gt;
                  &lt;type&gt;  int       , double       , double&lt;/type&gt;
                  &lt;unit&gt;  nm        , W/m^2        , W/m^2&lt;/unit&gt;
                  &lt;header&gt;Wavelength, Irradiance   , Irradiance Std. Uncertainty&lt;/header&gt;
                  &lt;data&gt;  250       ,  0.018184693 , 0.020338474
                          300       ,  0.184783924 , 0.017558388
                          350       ,  0.808454870 , 0.016061036
                          400       ,  2.213559358 , 0.014050724
                          450       ,  4.490045649 , 0.012509585
                          500       ,  7.451358772 , 0.012003620
                          550       , 10.75754957  , 0.011528671
                          600       , 14.03809504  , 0.011028261
                          650       , 16.99469553  , 0.011031749
                          700       , 19.44093973  , 0.010771097
                  &lt;/data&gt;
                &lt;/table&gt;
                ```
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="type">
                <xsd:annotation>
                    <xsd:documentation>
                        The data type of each column in the `table`.
                        Each data type shall be separated by a comma (`,`).
                        Whitespace may be used.

                        Allowed data types are: **bool**, **int**, **double**, **string**

                        ```
                        |  Data  |  Size   |                   Description                         |
                        |  Type  | (bytes) |                                                       |
                        | ------ | ------- | ----------------------------------------------------- |
                        | bool   |    1    | Value is one of: true True TRUE 1 false False FALSE 0 |
                        | int    |    4    | Values from -2147483648 to +2147483647 (inclusive)    |
                        | double |    8    | Approx. 2E-308 to 2E+308 (15-16 digits of precision)  |
                        | string |         | Unicode character strings                             |
                        ```
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="\s*(bool|int|double|string)\s*(,\s*(bool|int|double|string)\s*)*"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="unit" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The unit of each column in the `table`.
                        Each unit shall be separated by a comma (`,`).
                        If a column does not have a unit (for example, a column is for comments),
                        the unit for that column may be an empty string.
                        Whitespace may be used.

                        Satisfy ISO/IEC 17025:2017 Clause 7.8.2.1 \
                        m) the results with, where appropriate, the units of measurement
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="header">
                <xsd:annotation>
                    <xsd:documentation>
                        The label of each column in the `table`.
                        Each label shall be separated by a comma (`,`).
                        Whitespace may be used.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[^,]+(,[^,]+)*"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="data">
                <xsd:annotation>
                    <xsd:documentation>
                        The data in the `table`.
                        Each row shall be separated by a line-feed character (0x0A).
                        Each column in a row shall be separated by a comma (`,`).

                        If splitting the content by a line-feed character results in
                        an empty row or a row that contains only whitespace characters,
                        that row shall be ignored.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:pattern value="[^,]+(,[^,\n][^,]*)*"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ranges">
        <xsd:annotation>
            <xsd:documentation>
                The numeric range for each variable that an `equation` is valid for.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="range">
                <xsd:annotation>
                    <xsd:documentation>
                        The numeric range for each `variable` that the `equation` is valid for.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="minimum" type="xsd:double">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The minimum value of the `variable` that the `equation` is valid for.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="maximum" type="xsd:double">
                            <xsd:annotation>
                                <xsd:documentation>
                                    The maximum value of the `variable` that the `equation` is valid for.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="variable" type="msl:nonEmptyString" use="required">
                        <xsd:annotation>
                            <xsd:documentation>
                                The name of a variable in the `equation` that this `range` applies to.

                                _Attention: This XSD document validates the content of an XML document
                                (e.g., that the `variable` attribute exist and the content
                                is a [nonEmptyString](#type_nonEmptyString)). It does not attempt to
                                validate that the range for every `variable` is uniquely defined.
                                You must use another tool to validate that every `variable` is
                                uniquely defined._
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

</xsd:schema>
